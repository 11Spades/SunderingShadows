//	/bin/high_mortal/_teleport.c
//	from the Nightmare mudlib
//	A high mortal goto
//	created by Descartes of Borg 09 december 1992

#include <std.h>

inherit DAEMON;

int cmd_go(string str) {
    mixed location;
    mapping rooms;
    object room;
    string posxxx; 
    if(!str) {
	    location = (string)this_player()->getenv("marked");
	    if(!location) location = (string)this_player()->getenv("start");
	    this_player()->move_player(location);
	    return 1;
    }
    
    if(str == "arena") {
        this_player()->move_player("/realms/obsidian/rooms/arena1");
        return 1;
    }
//home stuff added by ~Circe~ 12/15/07 to help avs find their way home
    if(str == "home"){
       if(!room = find_object_or_load("/d/avrooms/"+TPQN+".c")){
          tell_object(TP,"You don't seem to have a home.");
       return 1;
       }else{
          TP->move_player(room);
          return 1;
       }
    }
//end home stuff
    if(TP->query_rem_rooms()) { 
        if(member_array(str,keys(TP->query_rem_rooms())) != -1) {
            tell_object(TP,"You go to the location remembered as "+str+"!\n");
            rooms = TP->query_rem_rooms();
            TP->move_player(rooms[str]);
            return 1;
        }
    }

    if(sscanf(str, "to %s", str) != 1) {
	    notify_fail("Correct syntax: <teleport to [player]>\n");
	    return 0;
    }

    if(!find_living(str) || wizardp(find_living(str))) {
	    notify_fail(capitalize(str)+" is nowhere to be found.\n");
	    return 0;
    }
    
    if(!find_living(str)->is_player()) {
        notify_fail("You can only teleport to players.\n");
        return 0;
    }

    posxxx = lower_case((string)TP->query_position());
    if(posxxx == "builder" || posxxx == "apprentice")
    {
        tell_object(TP,"You cannot use this command as a builder or apprentice.");
        return 1;
    }

    location = environment(find_living(str));
  if (file_name(location) == "/d/shadowgate/setter"){
    tell_object(this_player(), "You can't teleport to the settings room."
                +"  We're sorry to restrict your liberty in this way, but"
                +" it makes the Mud crash. So tough. All the best,"
               +" %^B_GREEN%^%^BOLD%^%^GREEN%^Lujke%^RESET%^");
    return 1;
  }
    this_player()->move_player(location);
    return 1;
}

void help() {
    write("Syntax: <go (to [player] | arena | <place>)>\n\n"+
	"<go> will teleport you to spot previously marked by you "+
    "or your start room.\n"+
    "go <player> will teleport you to an online player\n"+
    "go arena will teleport you to the immortal arena\n"+
    "go <place> will teleport you to the place you specify.  Note "+
    "that <place> must be somewhere you've remembered via "+
    "the <remember> command.\n");
}
