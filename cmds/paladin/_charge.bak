//_charge.c
/*
 *This cmd is a paladin command designed around the paladin
 *charging toward an opponent on his or her warhorse.
 */

#include <std.h>

inherit DAEMON;


void cmd_charge(string str){

  object ob, *weapon;
  int damage;

  if(!str)
    return notify_fail("You need to specify a target!\n");

  if((string)TP->query_class() != "paladin" && (string)TP->query_class() != "antipaladin")
    return notify_fail("You haven't the skill to try this attack!\n");

  if(!(ob = present(str,ETP)))
    return notify_fail("Your target is not in range!\n");

  if(!this_player()->ok_to_kill(ob)) {
    notify_fail("Supernatural forces prevent your attack.\n");
    return 0;
  }
  
  if(ob->query_property("no rush")) return notify_fail("You can't really charge that.\n");
  
  if(!TP->query_in_vehicle() || !objectp((object)TP->query_in_vehicle()))
  	return notify_fail("You need to be mounted to do that.\n");

  if((int)TP->query_level() < 10) return notify_fail("Your experience is not enough to control that horse.\n");
  
  if(ETP->query_property("no kill") || ETP->query_property("no attack")){
    notify_fail("Supernatural forces prevent your attack.\n");
    return 0;
  }
	TP->clean_up_attackers();
    ob->clean_up_attackers();

	if((object *)TP->query_attackers() != ({}) || (member_array(ob,(object*)TP->query_hunted()) != -1)){
    	write("You can't do that while being attacked.");
    	return 1;
    }
	weapon = TP->query_wielded();
	if((weapon == ({})))
		return notify_fail("This attack is useless without weapons!\n");

//	if(sizeof(weapon) >1) return notify_fail("You can charge with only one weapon, a Lance.\n");
	
	if(!weapon[0]->query_property("lance")) return notify_fail("You can charge with only one kind of weapon, a lance.\n");
		
  ob->kill_ob(TP,1);
  TP->kill_ob(ob,1);
  
  tell_room(ETP, "%^BOLD%^%^BLUE%^"+TPQCN+" digs "+TP->query_possessive()+" heels into "+TP->query_possessive()+" "+TP->query_in_vehicle()->query_cap_name()+".",TP);
    tell_object(TP,"%^BOLD%^%^BLUE%^You dig your heels into your "+TP->query_in_vehicle()->query_cap_name()+".");
    tell_object(ob,"%^BOLD%^%^BLUE%^"+TPQCN+" is charging toward you!!!");
  if((int)TP->Thaco(0,ob,weapon[0]) <= roll_dice(1,20) && random(100) > 20){

    if((int)ob->query_size() <3)
      damage = weapon[0]->query_damage();
    else
      damage = weapon[0]->query_large_damage();
    damage += TP->get_damage(weapon[0]);
    damage += "/daemon/bonus_d"->damage_bonus(TP->query_stats("strength"));
    damage = damage * (((int)TP->query_level()/5)+1);
    
    call_out("do_harm",8,damage,ob, TP);
  } else {
    tell_room(ETP,"%^BOLD%^%^BLUE%^As "+TPQCN+" charges, "+ob->query_cap_name()+" manages to dodge the attack.",({TP,ob}));
    tell_object(TP,"%^BOLD%^%^BLUE%^"+ob->query_cap_name()+" dodges your charge.");
    tell_object(ob,"%^BOLD%^%^BLUE%^You successfully dodge the charge.");
    TP->set_paralyzed(15,"Your recovering from your missed charge!");
    return 1;
  }

  return 1;
}


void do_harm(int damage, object ob, object play) {
  if(!objectp(ob)) return;
  if(!objectp(play)) return;
  if(!present(ob, environment(play))) {
    tell_object(play,"%^BOLD%^You realize that your opponent has escaped your charge.");
    tell_object(ob,"%^BOLD%^You have safely elluded "+play->query_cap_name()+"'s charge!");
    return;
  }

  tell_object(play,"%^BOLD%^You successfully ride with the power of your steed behind you into "+ob->query_cap_name()+"!");
  tell_room(environment(play),"%^BOLD%^"+TPQCN+" rides with tremendous force into "+ob->query_cap_name()+"!",({ob,TP}));
  tell_object(ob,"%^BOLD%^"+TPQCN+" rides with tremendous force into you, "+play->query_possessive()+" weapon doing great damage!\n");
  play->set_disable(60);
  ob->do_damage(ob->return_target_limb(),damage);
  ob->set_paralyzed(8,"Your recovering from that last hit");
  return 1;

}


void help(){
        write(
@OLI

This command is a paladin/anti-paladin command designed around
charging ones opponent while mounted on a horse. You must be 
wielding a lance for this attack to work. The damage is in 
proportion to your level. 

charge <target>
OLI
        );
}
