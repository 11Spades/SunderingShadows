//      Color Spray
//      Thorn@Shadowgate
//      1/31/95
//      Wizard Spells
//      color_spray.c

string query_sphere() { return "alteration"; }

void do_spell(object caster, string targ) {
  object target;
  string *ret, spell_name;
  int mp_req,x;
  spell_name = "color spray";
  if(!caster) return 0;
  mp_req = "/daemon/magic_d"->query_spell_cost(2,caster->query_sphere(),query_sphere());
  if((int)caster->query_mp() < mp_req) {
    tell_player(caster, "Your magic powers are too weak to cast that spell.\n");
    return 1;
  }
  if(!"/daemon/magic_d"->can_cast(caster,1,"wizard", spell_name)) {
    tell_player(caster, "You cannot cast that spell.\n");
	return 1;
  }
  if(caster->query_disable()) {
    write("You are still recovering from the last spell.");
    return 1;
  }
  write("You begin to cast the spell!");
  caster->set_mp((int)caster->query_mp() - mp_req);
  caster->set_casting(1);
  say(this_player()->query_cap_name()+" throws a small handful of colored powder in the air!\n");
  caster->set_disable(7);
  call_out("do_real_spell",7,caster,target);
  return 1;
}

int spell_effect(object target, int effect) {
	int time, temp;
	if(!target) return 1;
	switch(effect) {
		case 0:
    		tell_player(target,"You manage to quickly turn your head before you are dazzled by the bright light\n.");
			return -1;
		case 1:
    		tell_player(target,"You are knocked unconscious by the bright light\n.");
			time = 7 * random(6)+2;			
			target->set_paralyzed(time, "You are unconscious and can't do anything!\n");
			temp = target->query_sight_bonus();
			target->add_sight_bonus(-1000);
			call_out("restore_sight", time, target, temp);
			return -1;
		case 2:
			temp = target->query_sight_bonus();
			target->add_sight_bonus(-1000);
			time = 7 * random(3)+1;
			call_out("restore_sight",time,target,temp);
			return -1;
		case 3:
    		tell_player(target,"You are stunned by the bright light\n.");
			target->set_paralyzed(7, "You are temporarily stunned and cannot do that.\n");
			time = 7;
			return -1;
		default:
			tell_room("ERROR: spell_effect() in color_spray.c\n");
			return -1;
	}
}

void restore_sight(object target, int temp) {
	if(!target) return;
    tell_player(target,"You regain your vision, slowly.\n.");
	target->add_sight_bonus(1000 + temp);
}
								
void do_real_spell(object caster, object target) {
  string target_limb;
  int levelmod, casterlevel, x, y, effect, temp;
  object *prospective, *eligible, target2;

  if(caster->query_spell_interrupted()) {
    tell_player(caster,"Your spell is disrupted by the monster's attack!\n");
    caster->set_spell_interrupted(0);
    return 1;
  }
  casterlevel = (int)caster->query_guild_level("mage");
  if(!casterlevel)
    casterlevel = (int)caster->query_guild_level("illusionist");
  if(!casterlevel) {
    tell_player(caster,"Wait, you're not a magic user!\n");
    return 1;
  }
  tell_player(caster,"You cast Color Spray.\n");
  tell_room(environment(caster),"You see a fan-shaped spray of clashing colors spring from "+caster->query_cap_name()+"'s hands!\n", ({ caster }) );
  prospective = all_inventory(environment(caster));
  eligible = ({});
  for(x=0;x<sizeof(prospective);x++) {
  	if(!living(prospective[x])) continue;
	target2 = prospective[x];
	if((int)target2->is_player() == 1 && target2 != caster) {
		if ((int)target2->query_level() > casterlevel) effect = 2;
		if ((int)target2->query_level() > casterlevel + 2) effect = 3;
		if ((int)target2->query_level() <= casterlevel) effect = 1;
		if ((int)target2->query_level() > casterlevel || (int)target2->query_level() == 6) {
			if("/daemon/saving_d"->saving_throw(target, "spell")) effect = 0;
		}
		spell_effect(target2, effect);
	}
  }
  caster->set_casting(0);
	if(target) target->kill_ob(caster);
}
