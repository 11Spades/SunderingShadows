// Crescent of Domination
// Thorn@ShadowGate
// 970302
// crescent.c

#include <std.h>

int uses, open;
object caster, place, target;
object clothes, remote;
int clevel, change, duration, quitting;
    

void check();
int dominate(string str);
void dest_effect();
int query_uses();

inherit "/std/armour";

create() {
  ::create();
  set_property("silver crescent", 1);
  set_name("silver crescent");
  set_id(({
  "crescent", "silver crescent",
  "silver crescent on a silver chain",
  "crescent of domination"
  }));
  set("short","a silver crescent on a silver chain");
  set_long(
@AZHA
..This is a silver crescent, about 3 inches tall from tip
to tip, strung on thin, silver chain.  In the center of the
crescent is set a single emerald.  You can immediately tell
that this is an item of great power, and untold wonders.  
One thing goes through your mind while you have this.
Be careful, this much power can dominate you as well as
dominating others.
AZHA
);
  set_type("clothing");
  set("value", 100);
  set_ac(0);
  set_weight(2);
  set_limbs(({ "neck" }));
  uses = random(2)+1;
  open = 0;
}

init()
{
	add_action("dominate", "dominate");
}

int dominate(string str)
{
	  if(!uses) {
		  tell_object(TP, "The crescent dissolves into dust!\n");  
		  dest_effect();
		  if(!(this_object()->remove())) destruct(TO);
		  return 1;
		}	
		if(!str) return 0;
    caster = TP;
    if(!target =(present(str, environment(TP)))) return 0;
    clevel = 12;
    change = -2;
    if(!interactive(caster) || caster==target)
    {
        destruct(TO);
        return 1;
    }
    uses--;
    duration=0;
    switch(target->query_stats("intelligence"))
    {
        case 1..3: duration = 1200; break;
        case 4..6: duration = 800; break;
        case 7..9: duration = 400; break;
        case 10..12: duration = 300; break;
        case 13..14: duration = 200; break;
        case 15..16: duration = 100; break;
        case 17: duration = 50; break;
        case 18: duration = 40; break;
        case 19..25: duration = 30; break;
        default: duration = 30; break;
    }
    if(("/daemon/saving_d"->saving_throw(target, "spell", change)
        || wizardp(target)
        || present("clothesx999",target))
    && !((string)target->query_name() == "vashkar" &&
(string)caster->query_name() == "littler")
        )
    {
        tell_object(caster,"Your attempt to "+
            "overcome the willpower of "+
            target->query_cap_name()+" has failed!");
        tell_object(target,""+
            caster->query_cap_name()+" tries to control your "+
            "mind!\nYou manage to fight "+
            caster->query_objective()+" off!");
        tell_room(environment(target),"Both "+caster->query_cap_name()+
            " and "+target->query_cap_name()+" seem to both have "+
            "nasty headaches.\n"+caster->query_cap_name()+
            " stumbles back a bit as "+target->query_cap_name()+
            " recovers.",({caster, target}) );
        return 1;
    }
    tell_object(caster,"You break into "+
        target->query_cap_name()+"'s mind and overcome "+
        target->query_possessive()+" willpower!");
    tell_object(target,""+
        caster->query_cap_name()+" tries to control your "+
        "mind!\nYou try to fight "+caster->query_objective()+
        " off, but "+caster->query_possessive()+" will is "+
        "too strong for you!\nYou are now completely under "+
        caster->query_cap_name()+"'s control.");
    tell_room(environment(target),""+target->query_cap_name()+" seems "+
        "to have a massive headache, but then stands up and "+
        "placidly turns towards "+caster->query_cap_name()+", as "+
        "if in a trance.",({caster, target}) );
    change=0;
    clothes=new("/d/magic/obj/sclothes.c");
    clothes->set_master(caster);
    clothes->set_spell(TO);
    clothes->move_is_ok(1);
    clothes->move(target);
    clothes->move_is_ok(0);
    remote=new("/d/magic/obj/remote.c");
    remote->set_caster(caster);
    remote->set_target(target);
    remote->set_spell(TO);
    remote->move_is_ok(1);
    remote->move(caster);
    remote->move_is_ok(0);
    call_out("check", duration);
}

void check()
{
    if("/daemon/saving_d"->saving_throw(target, "spell", change))
    {
        dest_effect();
    }
    call_out("check",duration);
}

void dest_effect()
{
    if(find_call_out("check") != -1)
        remove_call_out("check");
    if(!clothes)
        destruct(TO);
    if(clothes)
    {
        clothes->move_is_ok(1);
        clothes->move("/d/shadowgate/void");
        clothes->remove();
    }
    if(remote)
    {
        remote->move_is_ok(1);
        remote->move("/d/shadowgate/void");
        remote->remove();
    }
    if(target)
    {
        tell_room(environment(target),""+
            target->query_cap_name()+" blinks a couple times, then "+
            "looks around.", target );
        tell_object(target,"You blink a couple times, then "+
            "look around.");
        if(quitting)
            target->force_me("quit");
    }
    if(!caster)
        return;
    if(target)
        if(present(caster, environment(target)))
        {
            tell_room(environment(target),"Outraged at "+
                caster->query_cap_name()+" for "+
                caster->query_possessive()+" sorcery, "+
                target->query_cap_name()+" attacks "+
                caster->query_objective()+"!", ({target, caster}) );
            tell_object(target,"Outraged at "+
                caster->query_cap_name()+" for "+
                caster->query_possessive()+" sorcery, you attack "+
                caster->query_objective()+"!");
            tell_object(caster,""+target->query_cap_name()+
                " attacks you, outraged at you for your sorcery!" );
            target->kill_ob(caster);
        }
}

void set_quitting()
{
    quitting=1;
}


int heart_beat()
{
	if(uses <= 0) {	 
	  set_heart_beat(0); 
	  dest_effect();
		tell_object(caster, "The crescent dissolves into dust!\n");  
    if(!TO->remove()) destruct(TO);
    return 1;
  }
  uses--;
  return 1;
}

int query_uses() { return uses; }
