//Assassins guild hall coded by Bane//
#include <std.h>
#define SAVE_ROOM "/d/save/assassin1"
inherit ROOM;
string *registered;
void add_member();
void create(){
    ::create();
    registered = ({});
    seteuid(geteuid());
    restore_object(SAVE_ROOM);
    set_name("Assassins guild");
    set_short("Assassins guild");
    set_long(
	"You are standing in some sort of holed up office.  This must "+
	"the grand master assassins quarters.  It is rumored he works "+
	"his business right out of this guild hall.  There is a small "+
	"wooden desk and chair in one corner of the room, covered in cob "+
	"webs and dust.  A registry sits open on the desk.  A message "+
	"board is on the wall near the desk, a personal bounty board of "+
	"the most feared killer in the realm."
    );
    set_property("indoors",1);
    remove_property("light");
    set_property("light",2);
    set_property("no teleport",1);
    set_listen("default","The room is deathly silent.");
    set_smell("default","The room smells strangely fresh and untainted.");
    set_items( ([
	({"board"}):"There are a few names scribled illegibly on the board.",
	({"desk"}):"The desk is covered in dust, it is obviously not used "+
	    "very often.",
	({"registry"}):"This has the names of the Assassins who registered "+
	    "here in the guild hall.  You can <register> if you wish."
    ]) );
    set_exits( ([
	"north":"/d/laerad/parnelli/cguild/assassin/aguild1"
    ]) );
    save_object(SAVE_ROOM);
}
void init(){
    ::init();
    add_action("read","read");
    add_action("register","register");
}
int read(string str){
    int i;
    if(!str || str != "registry") return 0;
    tell_room(TO,TPQCN+" reads the registry.",TP);
    write("This book contains the names of Assassins who have officially registered.");
    write("=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=");
    for(i=0;i<sizeof(registered);i++)
	write("%^BOLD%^"+capitalize(registered[i]));
    return 1;
}
int register(){
    if(!TP->is_class("assassin")) return notify_fail("You cant find a pencil.\n");
    if(TO->add_member(TPQN)){
	write("You write your name down in the registry.");
	return 1;
	} else {
	notify_fail("You are already registered!\n");
    }
}
int add_member(){
    string str;
    str = TPQN;
    if(member_array(str, registered) == -1){
	registered += ({str});
	save_object(SAVE_ROOM);
	return 1;
    }
    return 0;
}
void remove_member(string str){
    if(member_array(str, registered) != -1){
	registered -= ({str});
	save_object(SAVE_ROOM);
	return 1;
    }
    return 0;
}
