//lava tubes inheritable
//Heavily modified by dinji on 2/11/09 after modifications by Styx & Garrett

#include <std.h>
#include <daemons.h>
#include "/d/islands/tonerra/areadefs.h"

inherit CROOM;

string what;
object room;
int flag,party,trap,getmobs;

void pick_critters() {
	string *str,dir;
	object *temp,ob;
                     switch(random(50)) {
			case 0..10:			
                                set_monsters(({OBJ+"lavastream"}),({1}));
			   break;
			case 11..18:
				if(trap) {
				str = (string *)TO->query_exits();
                           if(!sizeof(str)) break;
                                dir = str[random(sizeof(str))];
				set_trap_functions(({dir}),({"newt"}),({dir}));	
				add_item("alcoves","There seems to be something hidden in the rocky alcove toward the "+dir+".");	
				what = "newt&"+dir;
				trap = 0;
				} else {
                                set_monsters(({MON+"magman"}),({2}));
				break;
                        case 19..20:
                                set_monsters(({MON+"magman"}),({1}));

				break;
                        case 21..31:
                                set_monsters(({MON+"harginn"}),({1}));
				break;
			case 32..50:
				if(party) {
				temp = "/d/islands/tonerra/mon/lava_d"->make_party(TO);
				party = 0;
				} else {
				set_monsters(({MON+"harginn"}),({2}));
				}
		}
	}
}


void create(){
    if(!random(2)) getmobs = 1;
   if(getmobs) pick_critters();
   party = 1;
   trap = 1;
   ::create();
   set_indoors(1);
   set_terrain(NAT_TUNNEL);
   set_travel(FOOT_PATH);
   set_property("no teleport",1);
   set_property("used sticks",1);
}

void reset(){
	object *temp,ob;
	int i, active;
	string *str,dir;
      if(getmobs) {
      active = has_mobs();
      if(!active) {
      if(mons)  mons = ([]); 
                        switch(random(50)) {
			case 0..10:			
                                set_monsters(({OBJ+"lavastream"}),({1}));
			   break;
			case 11..18:
				if(trap) {
				str = (string *)TO->query_exits();
                           if(!sizeof(str)) break;
                                dir = str[random(sizeof(str))];
				set_trap_functions(({dir}),({"newt"}),({dir}));	
				add_item("alcoves","There seems to be something hidden in the rocky alcove toward the "+dir+".");	
				what = "newt&"+dir;
				trap = 0;
				} else {
                                set_monsters(({MON+"magman"}),({2}));
				break;
			case 19..22:
                                set_monsters(({MON+"magman"}),({1}));

				break;
			case 23..31:
                                set_monsters(({MON+"harginn"}),({1}));
				break;
			case 32..50:
				if(party) {
				temp = "/d/islands/tonerra/mon/lava_d"->make_party(TO);
				party = 0;
				} else {
				set_monsters(({MON+"harginn"}),({2}));
				}
			}
		}
	}
}
::reset();
}


int newt(){
	string verb;
        object ob,*inven2,*inven,tmp;
	int i,j,k,l;
	
	verb = query_verb();
        if(TP->query_true_invis()) return 0;
        if(!objectp(TP))  
	   return 0;
	tell_room(TO,"%^BOLD%^As "+TPQCN+" wanders "+verb+" the rock around "+TP->query_objective()+" come alive and spears fly through the air.",TP);
	tell_object(TP,"%^BOLD%^As you walk "+verb+" the rock around you come alive and spears fly through the air!");
	inven = all_living(TO);
	inven = filter_array(inven, "is_non_immortal_player",FILTERS_D);
        l = sizeof(inven);
	  l = sizeof(inven);
	ob=new(MON+"fnewt");
	ob->move(TO);
        for(k=0;k<l;k++){
                ob->kill_ob(inven[k],1);
        }
        ob=new(MON+"fnewt");
	ob->move(TO);
        for(k=0;k<l;k++){
                ob->kill_ob(inven[k],1);
        }
        ob=new(MON+"fnewt");
	ob->move(TO);
        for(k=0;k<l;k++){
                ob->kill_ob(inven[k],1);
        }
	tmp = new("/d/common/obj/weapon/spear_lg");
      tmp->set_property("enchantment",3);
	if(ob->Thaco(1,TP,tmp) < (random(20)+4)){
		tell_object(TP,"You are hit with a spear!");
		tell_room(TO,TPQCN+" is hit with a spear.",TP);
		ob->do_hits(TP, tmp, "torso");
	}
	if(ob->Thaco(1,TP,tmp) < (random(20)+4)){
		tell_object(TP,"You are hit with a spear!");
		tell_room(TO,TPQCN+" is hit with a spear.",TP);
		ob->do_hits(TP, tmp, "torso");
	}
	j = random(5)+4;
	for(i=0;i<j;i++){
		if(!sizeof(inven)) continue;
		k = random(sizeof(inven));
                if (!objectp(inven[k])) continue;
		if(ob->Thaco(1,inven[k],tmp) < (random(20)+4)){
			tell_object(inven[k],"You are hit with a spear!");
			tell_room(TO,inven[k]->query_cap_name()+" is hit with a spear.",inven[k]);
			ob->do_hits(inven[k], tmp, "torso");
		}
	}
        TP->add_attacker(ob);
        TP->continue_attack();
        TP->remove_attacker(ob);
	
	l = sizeof(inven);
	
	tell_room(TO,"%^BOLD%^%^BLUE%^Mounted firenewts appear from the rocks and the hot steam and attack.");
		 	
	toggle_trap(verb);
	return 1;
}

void init(){
	::init();
}

string query_long(string str){
	string hold,one,two;
	
	hold = ::query_long(str);
	
	if(!what) return hold;
	
	sscanf(what,"%s&%s",one,two);
	if(!one || !trapped(two)) return hold;
	switch (one){
		case "newt":
			hold += "You hear a low breathing from the alcoves in the rock.";
			return hold;
			break;
	}
	return hold;
}
