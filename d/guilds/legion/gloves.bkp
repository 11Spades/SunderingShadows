#include <std.h>
inherit "/std/guild";

void create() {
    guild::create();
    set_name("Gloves of Power");
    set_id( ({"legion gloves","gloves", "gloves of power", "Gloves", "Gloves of Power", "gauntlets"}) );
    set_short("%^BOLD%^%^BLUE%^Gloves of Power%^RESET%^");
    set_long(
      "These gloves are made of a strange silvery cloth, but much stronger.  These gloves slide over your hands and halfway up your forearms, to protect your arms.  The gloves themselves glow with a strange %^BOLD%^power%^RESET%^ that comes from deep from within the soul of the wearer.\n   %^CYAN%^There is an inscription on the gloves."
    );
    set_weight(1);
    set_value(1);
    set_ac(1);
    set_leader("beowulf");
    set_guild_hc( ({"beowulf", "anna", "seraph", "gimli"}) );
    set_guild_items( ({"/d/guilds/legion/gloves.c"}) );
    set_guild_home("/d/guilds/legion/hall/main.c");
    set_welcome("Welcome to the core of the power.");
    set_guild_name("Legion of Lost Soul");
    set_type("ring");
    set_limbs( ({"right hand", "left hand"}) );
    set_wear( (:TO, "wear_me":) );
    set_remove( (:TO, "remove_me":) );
}

void init(){
    guild::init();
    if (ETO==TP) TP->force_me("wear gloves");
    if( (string)TP->query_guild() == "Legion of Lost Soul" ) {
	add_action("throw_voice", "voice");
	add_action("shadow", "shadow");
	add_action("shadowspeak", "shadowspeak");
	add_action("read_this", "read");
    } else {
	TO->remove();
    }
}

int wear_me() {
    if( (string)TP->query_guild() != "Legion of Lost Soul" ) {
	TO->remove();
	return 0;
    }
    tell_object(TP, "You slide the gloves on, and a dull %^BOLD%^glow%^RESET%^ spreads across them.");
    tell_room(ETP, TPQCN+" slides on "+TP->query_possessive()+" Gloves of Power, and a dull %^BOLD%^glow%^RESET%^ spreads across them.", TP);
    return 1;
}

int remove_me() {
    tell_object(TP, "You slide the gloves off, and the glow subsides.");
    tell_room(ETP, TPQCN+" slides off the gloves, and they stop glowing.", TP);
    return 1;
}

int throw_voice(string str) {
    string who, string2;
    string short;
    object ob;
    int i, size;
    object *user;
    if(!str) return notify_fail("Syntax: throw voice <object> <to be said>");

    if(sscanf(str, "throw %s %s", who, string2) != 2) return notify_fail("Syntax: voice throw <object> <to be said>");

    if(!(ob=present(who, environment(TP)))) return notify_fail("It has to be in the same room as you.");

    if(ob == TP) return notify_fail("Now that's just stupid.");

    if( (string)ob->query_guild() == "Legion of Lost Soul" ) {
	tell_object(ob, "Voice throwing was just used on you.");
    }
    if(!living(ob)) {
	short = (string)ob->query_short();
	tell_room(ETP, "%^MAGENTA%^"+short+" says%^RESET%^: "+string2+"", ob);
	return 1;
    } else {
	if(wizardp(ob) && !(archp(TP) || (string)TP->query_name() == "grendel")) {
	    tell_object(ob, capitalize(TP->query_true_name())+" tried to make you say somthing.  Rip out his tonsils.");
	    return notify_fail("Are you really that stupid?");
	}
	ob->force_me("say "+string2);

	if( (int)ob->query_stats("wisdom") > random(30) ) {
	    user = all_living(ETP);
	    size = sizeof(user);
	    for(i=0;i<size;i++) {
		if(interactive(user[i]) || (string)user[i]->query_guild() == "Legion of Lost Soul" ) {
		      tell_object(user[i], "Wait a minute.  "+ob->query_cap_name()+" wasn't moving his lips.\n");
		  }
	      }
	    }

	}
	return 1;
    }

    int shadowspeak(string str) {
	if(!str) return notify_fail("say what?");

	write("%^MAGENTA%^Your shadow says%^RESET%^: "+str+".", TP);
	tell_room(ETP, "%^MAGENTA%^Someone says%^RESET%^: "+str+".", TP);
	return 1;
    }

    int shadow(string str) {
	if(!str) return notify_fail("do what?");

	write("Your shadow "+str+".", TP);
	tell_room(ETP, "Someone "+str+"", TP);
	return 1;
    }

    int read_this(string str) {
	if(!str) return notify_fail("read what?");

	if( (str != "gloves") && (str != "writing") ) return notify_fail("read what?");

	tell_object(TP, "The writing on the gloves reads:\n    To have your shadow speak, type shadowspeak <message>\n    To have your shadow perform an action, type shadow <emote>\n    To throw your voice to another's mouth, type voice throw <object> <message>");
	return 1;
    }

    int drop(){
	return 1;
    }
