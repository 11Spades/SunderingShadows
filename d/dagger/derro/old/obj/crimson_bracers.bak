#include <std.h>
#include <daemons.h>
#define WAIT_TIME 14400

inherit "/d/common/obj/armour/bracers";
int used_time;

void create(){
    ::create();
    set_name("%^RESET%^%^RED%^C%^BOLD%^%^RED%^r"+
    "%^RESET%^%^RED%^i%^BOLD%^%^RED%^m%^RESET%^%^RED%^"+
   "s%^BOLD%^%^RED%^o%^RESET%^%^RED%^n Bracers%^RESET%^");
    set_id(({ "bracers", "bracer", "crimson bracers",
    "crimson bracer","red bracer","red bracers"}));
    set_short("%^RESET%^%^RED%^C%^BOLD%^%^RED%^r"+
    "%^RESET%^%^RED%^i%^BOLD%^%^RED%^m%^RESET%^%^RED%^"+
   "s%^BOLD%^%^RED%^o%^RESET%^%^RED%^n Bracers%^RESET%^");
    set_obvious_short("%^RESET%^%^RED%^Ruby bracers%^RESET%^");
    set_long("%^RED%^These bracers are formed from a "+
    "%^BOLD%^%^WHITE%^shining%^RESET%^%^RED%^ and flawless ruby.  "+
    "They are less than one inch thick and are very light.  "+
    "Impressed into their top are %^BOLD%^%^GREEN%^four emerald "+
    "guardians%^RESET%^%^RED%^, each wielding a longsword.  "+
    "Engraved below the impression is a small "+
    "%^BOLD%^%^WHITE%^inscription%^RESET%^%^RED%^ that could "+
    "easily be read.%^RESET%^");
    set("read",
@AVATAR
%^BOLD%^%^WHITE%^Protection is given if only you request...%^RESET%^
%^BOLD%^%^WHITE%^Guards await day by day to do for their master the best.%^RESET%^
AVATAR
    );
    set_value(5000);
    set_property("enchantment",3);
    set_ac(0); //to remove any AC from the bracer inherit
    set_ac(2); //what the ac should be, since they're jeweled
//Circe 9/6/04
    set_wear((:TO,"wear_func":));
    set_remove((:TO,"remove_func":));
}

void init(){
    ::init();
    if(living(ETO)) {
        add_action("make_em","request");
    }
}

void failure() {
    tell_object(ETO,"%^BOLD%^%^RED%^The bracers fail to respond.\n",EETO);
    return 1;
}

int make_em(string str){

	int align;

	align = ETO->query_alignment();

 	if (ETO->query_bound() || EETO->query_unconscious() 
    || EETO->query_paralyzed()) {
        ETO->send_paralyzed_message("info",ETO);
    }
   	
  	if(!str) {
        tell_object(ETO,"Request what?\n");
        return 1;
    }	
    if(!(query_worn())){
		failure();
		return 1;
	}

    if(WAIT_TIME > (time() - used_time)) {
        failure();
        return 1;
    }
        
    if(str == "guards" || str == "protection"){
        used_time = time();
        ETO->force_me("emote begins softly caressing "+ETO->QP+" ruby "+
        "bracers and chanting loudly");
		switch(align){
		    case 1: case 4: case 7:
  			    new("/cmds/wizard/_faithful_phantom_guardians.c")->use_spell(ETO,"bats",26);
			    return 1;
			case 2: case 5: case 8:
  			    new("/cmds/wizard/_faithful_phantom_guardians.c")->use_spell(ETO,"centaurs",26);
				return 1;
			case 3: case 6: case 9:
  				new("/cmds/wizard/_faithful_phantom_guardians.c")->use_spell(ETO,"warriors",26);
				return 1;
			default:
			    tell_object(ETO,"See a Wiz about this, your alignment "+
                "is whacked.");
                return 1;
        }
	}
     
  	failure();	
    return 1;
}

int wear_func(){
    if(::check() != 1) {
        return 0;
    }
    if((int)ETO->query_lowest_level() < 25) {
        write("The magic of the bracers refuses you!");
        return 0;
    }
    if(!ETO->query_invis()) {        
        tell_room(EETO,"%^RED%^"+ETOQCN+" wears the perfectly "+
        "fitted ruby bracers!%^RESET%^",ETO);
    }
	tell_object(ETO,"%^RED%^You wear the perfectly fitted ruby "+
    "bracers!%^RESET%^",EETO);
    ETO->set_property("magic resistance",5);
    return 1;
}

int remove_func(){
    if(!ETO->query_invis()) {
        tell_room(EETO,"%^RED%^"+ETOQCN+"%^RED%^ slowly removes the "+
        "perfectly fitted ruby bracers!%^RESET%^",ETO);
    }
        
    tell_object(ETO,"%^RED%^You slowly remove the perfectly "+
    "fitted ruby bracers!%^RESET%^",EETO);
	ETO->set_property("magic resistance",-5);
	return 1;
}

void set_used_time(int x) {
    used_time = x;
}