#include "/d/dagger/road/short.h"
#define TONOVI1 "/d/dagger/tonovi/1path1"
#define TONOVI2 "/d/dagger/tonovi/2path1"
#define TORM "/d/dagger/Torm/road/path1"
#define DALE1 "/d/dagger/Daggerdale/gates/Wgate"
#define DALE2 "/d/dagger/Daggerdale/gates/Ngate"
#define D_MARSH "/d/dagger/marsh/marsh1.c"
#define KINARO "/d/dagger/kinaro/path1.c"
#define ELEMENTS "/d/dagger/elements/path/path1.c"
#define AKETON "/d/dagger/aketon/path/path1.c"
#define KEEP "/d/dagger/keep/road/road1"
#define STELLA "/d/dagger/road/stella/sroad1.c"
#define NOGO ({TONOVI1, TONOVI2, TORM, DALE1, DALE2, D_MARSH, KINARO, ELEMENTS, AKETON, KEEP, STELLA})

inherit MONSTER;

int count;

void create(){
    ::create();
    call_out("start_wonder",2);
}

void start_wonder(){
    if(objectp(ETO))
      ETO->init();
}

void heart_beat(){
    string *exits, exitn;
    int i,j;
    ::heart_beat();

    if(!objectp(TO)) return;
    if(!objectp(ETO)) return;
    if(TO->query_current_attacker()) return;
    if(count > 20) {
      exits = ETO->query_exits();
      i = sizeof(exits);
      if(exits && i){
        j = random(i);
        exitn = (string)ETO->query_exit(exits[j]);
        if(member_array(exitn, NOGO) == -1)
          TO->force_me(exits[j]);
      }
      count = 0;
    }
    count++;
}

int test_heart(){ return 1; }
