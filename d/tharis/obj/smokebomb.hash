#include <std.h>
inherit OBJECT;
string baseloc, baseroom;
void set_origin(string str);

void create() {
    ::create();
    set_name("black orb");
    set_id(({"orb","black orb","bomb","smokebomb","smoke bomb"}));
    set_short("%^BOLD%^%^BLACK%^Smo%^RESET%^%^ORANGE%^k%^BOLD%^%^BLACK%^ebomb%^RESET%^");
    set_obvious_short("%^BOLD%^%^BLACK%^glossy black orb%^RESET%^");
    set_long((:TO,"long_desc":));
    set_weight(5);
    set_value(2000);
    set_origin("torm");
}

void init() {
    ::init();
    set_long((:TO,"long_desc":));
    add_action("light_func","light");
}

string long_desc() {
    string mydesc;
    mydesc = "%^RESET%^The %^BOLD%^%^BLACK%^jet-black surface %^RESET%^of this "
"orb is glossy enough to see your face reflected in.  It is a %^CYAN%^perfect "
"sphere%^RESET%^, just the right size to fit in a person's hand, and unmarked "
"except at what must be the top and underside.  At the top, a small hole allows "
"%^ORANGE%^slender braided threads %^RESET%^to protrude, woven together and "
"coated in some kind of resin or oil.";
    if(TP->is_class("thief")) {
      mydesc += "  Upon the underside are %^GREEN%^letters %^RESET%^scrawled "
"to represent the "+baseloc+" thieves guild.\n";
      if(TP->is_singleClass())
        mydesc += "You've seen items like this before.  You're sure if you "
"%^YELLOW%^light%^RESET%^ the orb and cast it down before you, you can make a "
"quick getaway.\n";
    }
    else mydesc += "  Upon the underside are %^GREEN%^letters %^RESET%^scrawled "
"in an unknown hand.\n";
    return mydesc;
}

int light_func(string str) {
    object destination;
    if( !str || str != "orb") {
        notify_fail ("Light what?\n");
        return 0;
    }
    if (TP->query_bound() || TP->query_unconscious()) {
       TP->send_paralyzed_message("info",TP);
       return 1;
    }
    if(!TP->is_class("thief") || !TP->is_singleClass())
       return notify_fail("You're not quite sure how to use this.\n");
    if(TP->query_paralyzed())
       return notify_fail(TP->query_paralyze_message()+"\n");
    destination = find_object_or_load(baseroom);
    if(ETP->query_property("no teleport") || destination->query_property("no teleport")) {
      tell_object(TP,"You strike a %^YELLOW%^light %^RESET%^to the end of the "
"fuse and cast it down before you as it starts spewing %^BOLD%^%^BLACK%^thick "
"smoke%^RESET%^.  But when the smoke clears... you are still standing there.  "
"So much for a quick getaway?");
      tell_room(ETP,""+TPQCN+" strikes a light to the end of the orb's fuse and "
"casts it down as it starts spewing %^BOLD%^%^BLACK%^thick smoke%^RESET%^.  But "
"when the smoke clears... "+TP->QS+" is still standing there.",TP);
      TO->remove();
      return 1;
    }
    tell_object(TP,"You strike a %^YELLOW%^light %^RESET%^to the end of the "
"fuse and cast it down before you as it starts spewing %^BOLD%^%^BLACK%^thick "
"smoke%^RESET%^.");
    tell_room(ETP,""+TPQCN+" strikes a light to the end of the orb's fuse and "
"casts it down as it starts spewing %^BOLD%^%^BLACK%^thick smoke%^RESET%^.  But "
"when the smoke clears... "+TP->QS+" is gone!",TP);
    TP->move_player(baseroom);
    tell_object(TP,"When the smoke clears, you find yourself emerging safely "
"from the shadows back near the guild.");
    tell_room(ETP,""+TPQCN+" steps from the shadows, smelling faintly of "
"%^BOLD%^%^BLACK%^smoke%^RESET%^.",TP);
    TO->remove();
    return 1;
}

void set_origin(string str) {
   if(!str) return 0;
   if(str != "torm" && str != "tharis" && str != "juran") return 0;
   baseloc = str;
   switch(baseloc) {
     case "torm": baseroom = "/d/dagger/Torm/city/warehouse"; break;
     case "tharis": baseroom = "/d/tharis/Tharis/teashop"; break;
     case "juran": baseroom = "/d/shadow/juran/city/a3"; break;
   }
}

string query_origin() { return baseloc; }
